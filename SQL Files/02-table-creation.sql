CREATE DATABASE  IF NOT EXISTS `web_student_tracker`;
USE `web_student_tracker`;

DROP TABLE IF EXISTS USER_PROFILE;
create table USER_PROFILE(
   id BIGINT NOT NULL AUTO_INCREMENT,
   type VARCHAR(30) NOT NULL,
   PRIMARY KEY (id),
   UNIQUE (type)
);

DROP TABLE IF EXISTS COMPETENCIES;
create table COMPETENCIES(
   id BIGINT NOT NULL AUTO_INCREMENT,
   description VARCHAR(100) NOT NULL,
   PRIMARY KEY (id),
   UNIQUE (description)
);

DROP TABLE IF EXISTS APP_USER;
create table APP_USER (
   id BIGINT NOT NULL AUTO_INCREMENT,
   sso_id VARCHAR(30) NOT NULL,
   password VARCHAR(100) NOT NULL,
   first_name VARCHAR(30) NOT NULL,
   last_name  VARCHAR(30) NOT NULL,
   current_employer VARCHAR(20) NOT NULL,
   current_title VARCHAR(50) NOT NULL,
   session_attended date NOT NULL,
   email VARCHAR(30) NOT NULL,
   PRIMARY KEY (id),
   UNIQUE (sso_id)
);

DROP TABLE IF EXISTS APP_USER_USER_PROFILE;
CREATE TABLE APP_USER_USER_PROFILE (
    user_id BIGINT NOT NULL,
    user_profile_id BIGINT NOT NULL,
    PRIMARY KEY (user_id, user_profile_id),
    CONSTRAINT FK_APP_USER FOREIGN KEY (user_id) REFERENCES APP_USER (id),
    CONSTRAINT FK_USER_PROFILE FOREIGN KEY (user_profile_id) REFERENCES USER_PROFILE (id)
);

DROP TABLE IF EXISTS APP_USER_COMPETENCY;
CREATE TABLE APP_USER_COMPETENCY (
    user_id BIGINT NOT NULL,
    competencies_id BIGINT NOT NULL,
    PRIMARY KEY (user_id, competencies_id),
    CONSTRAINT FK_APP_USER_COMP FOREIGN KEY (user_id) REFERENCES APP_USER (id),
    CONSTRAINT FK_COMPETENCIES FOREIGN KEY (competencies_id) REFERENCES COMPETENCIES (id)
);

DROP TABLE IF EXISTS PERSISTENT_LOGINS;
CREATE TABLE PERSISTENT_LOGINS (
    username VARCHAR(64) NOT NULL,
    series VARCHAR(64) NOT NULL,
    token VARCHAR(64) NOT NULL,
    last_used TIMESTAMP NOT NULL,
    PRIMARY KEY (series)
);
